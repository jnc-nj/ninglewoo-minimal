#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros dynamic-space-size=4096 -Q -L sbcl -- $0 "$@"
|#

;;; COMPILE FLAGS
(declaim (sb-ext:muffle-conditions cl:style-warning))
(declaim (optimize (speed 3) (space 0) (debug 0) (safety 0) (compilation-speed 0)))
(declaim (sb-ext:muffle-conditions sb-ext:compiler-note))

;;; USE PACKAGES
(setf ql:*local-project-directories* (list "~/.roswell/local-projects/"))
(ql:quickload :clack :silent t)
(ql:quickload :woo :silent t)
(ql:quickload :ningle :silent t)
(ql:quickload :jack-tools :silent t)
(ql:quickload :log4cl :silent t)
(ql:quickload :dexador :silent t)

;;; PACKAGE DECLARATION
(in-package #:cl-user)
(defpackage #:ninglewoo
  (:use #:cl
	#:jack.tools.lists
	#:jack.tools.misc))
(in-package #:ninglewoo)

;;; LOAD FLAGS
(eval-when (:compile-toplevel :load-toplevel :execute)
  (setf sb-impl::*default-external-format* :utf-8)
  (setf sb-alien::*default-c-string-external-format* :utf-8) 
  (setf *read-default-float-format* 'double-float))

;;; GENERAL SETUP
(log:config :pattern "%&%<%I%;<;;>;-5p [%D{%H:%M:%S}] - %m%>%n")

;;; ENTRYPOINT
(defvar *app* (make-instance 'ningle:app))
(defhandler (*app* "/json" :method :post)
  (log:info http-content*)
  (list (cons "foo" (agethash :test http-content*))))

(defun main (&rest argv)
  (clack:clackup *app* :server :woo :use-default-middlewares nil)
  (dex:post "http://127.0.0.1:5000/json" :content "{\"test\":1}"))

